@use "variables";
@use "mixin" as *;

body {
   @include background($color: variables.$color-background);

   * {
      @include font($family: "Open Sans");
   }

   p {
      @include margin($vertical: variables.$margin-small);
   }

   li {
      @include margin($vertical: variables.$margin-small);
   }

   h1 {
      @include margin($vertical: variables.$margin-large);
   }

   h2 {
      @include margin($all: variables.$margin-large);
   }

   h3 {
      @include margin($vertical: variables.$margin-medium);
   }

   h4 {
      @include margin($vertical: variables.$margin-medium);
   }

   a {
      @include color($color: variables.$color-highlight);
   }

   section {
      @include flex;
      @include size($height: fit-content);
      @include margin($all: variables.$margin-large);
   }

   .white {
      @include filter(invert(100%) sepia(83%) saturate(0%) hue-rotate(5deg) brightness(107%) contrast(101%));
   }

   .highlight {
      @include filter(invert(66%) sepia(12%) saturate(5930%) hue-rotate(325deg) brightness(101%) contrast(101%));
   }

   & > header {
      @include flex;
      @include center($horizontal: true);
      @include margin($vertical: variables.$margin-large);
      @include background($color: variables.$color-main, $shadow: true);
      @include size($width: variables.$page-width, $height: fit-content);

      & > h1 {
         @include center($horizontal: true);
         @include size($width: fit-content, $height: fit-content);
      }
   }

   & > main {
      @include margin($vertical: 10svh);
      @include center($horizontal: true);
      @include background($color: variables.$color-main, $shadow: true);
      @include size($width: variables.$page-width, $height: fit-content);
      @include grid($columns: 3fr 1fr, $rows: repeat(variables.$section-count, auto));

      & > aside {
         @include size($height: 100%, $width: 100%, $max-width: 200%);
         @include background($color: variables.$color-secondary-background-highlight);
         @include grid-item($column-start: 2, $width: 1, $row-start: 1, $height: variables.$section-count);

         & > h2 {
            @include margin($all: variables.$margin-large);
         }

         & > section {
            & > img {
               @include image($object-fit: cover);
               @include size($both: 1.5rem);
            }

            & > details {
               @include cursor($cursor: pointer);

               & > summary {
                  @include list-style($image: url("../assets/icons/flowbite-info.svg"));
               }
            }

            & > a {
               @include link($text-decoration: none);
               @include color($color: variables.$color-text);
               @include margin($vertical: variables.$margin-medium);

               & > img {
                  @include image($object-fit: cover);
                  @include size($both: variables.$spotify-stats-image-size);
               }

               & > p {
                  @include margin($all: variables.$margin-small);
                  @include overflow($x: hidden, $white-space: nowrap);
                  @include text-align($vertical: center, $horizontal: left);
               }
            }

            &.contact-information {
               @include grid($columns: 1.5rem 1fr, $rows: repeat(variables.$contact-info-count + 1, 1fr), $column-gap: variables.$margin-medium);

               & > h3 {
                  @include grid-item($column-start: 1, $width: 2, $row-start: 1, $height: 1);
               }

               & > img {
                  @include margin($vertical: variables.$margin-small);

                  @for $index from 1 through variables.$contact-info-count {
                     &:nth-of-type(#{$index}) {
                        @include grid-item($column-start: 1, $width: 1, $row-start: #{$index + 1}, $height: 1);
                     }
                  }
               }

               & > p {
                  @include size($height: 1.5rem);
                  @include text-align($vertical: center, $horizontal: left);

                  @for $index from 1 through variables.$contact-info-count {
                     &:nth-of-type(#{$index}) {
                        @include grid-item($column-start: 2, $width: 1, $row-start: #{$index + 1}, $height: 1);
                     }
                  }
               }
            }

            &.tracks {
               & > a {
                  @include grid($columns: variables.$spotify-stats-image-size 1fr, $rows: 1fr 1fr);

                  & > img {
                     @include grid-item($column-start: 1, $width: 1, $row-start: 1, $height: 2);
                  }

                  & > p {
                     &:nth-of-type(1) {
                        @include grid-item($column-start: 2, $width: 1, $row-start: 1, $height: 1);
                     }

                     &:nth-of-type(2) {
                        @include grid-item($column-start: 2, $width: 1, $row-start: 2, $height: 1);
                     }
                  }
               }
            }

            &.artists {
               & > a {
                  @include grid($columns: variables.$spotify-stats-image-size 1fr, $rows: 1);

                  & > img {
                     @include grid-item($column-start: 1, $width: 1, $row-start: 1, $height: 1);
                  }

                  & > p {
                     @include grid-item($column-start: 2, $width: 1, $row-start: 1, $height: 2);
                  }
               }
            }
         }
      }

      & > section {
         @for $index from 1 through variables.$section-count {
            &:nth-of-type(#{$index}) {
               @include grid-item($column-start: 1, $width: 1, $row-start: #{$index}, $height: 1);
            }
         }
      }
   }
}
